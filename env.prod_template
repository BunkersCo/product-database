#
# This configuration file is used if the INSTANCE_CONFIG variable has the value "prod_template".
# Please use the following docker-compose command to setup the service with this configuration:
#
#       export INSTANCE_CONFIG=prod_template
#       docker-compose -p INSTANCE_NAME up -d
#
# !!! Please modify at least the following variables: POSTGRES_PASSWORD, DJANGO_SECRET_KEY
#
# the following parameter must match the prefix of the container name used with docker-compose
DJANGO_SECRET_KEY=plschgme
POSTGRES_DB=productdb
POSTGRES_USER=productdb
POSTGRES_PASSWORD=plschgme

DJANGO_LOG_LEVEL=info
PDB_DATABASE_HOST=database
PDB_DATABASE_PORT=5432
PDB_REDIS_HOST=redis
PDB_REDIS_PORT=6379
PDB_REDIS_PASSWORD=plschgme
PDB_CELERY_CONCURRENCY=4
PDB_GUNICORN_WORKER=3

# only required for the initial build, the certificate can be changed afterwards
HTTPS_SELF_SIGNED_CERT_COUNTRY=DE
HTTPS_SELF_SIGNED_CERT_FQDN=productdb

# optional settings - Django environment
#PDB_LANGUAGE_CODE=en-us
#PDB_TIME_ZONE=Europe/Berlin
#PDB_TIME_FORMAT=P
#PDB_DATE_FORMAT=N j, Y
#PDB_SHORT_DATE_FORMAT=Y-m-d

# optional settings - sentry
#PDB_ENABLE_SENTRY=1
#PDB_SENTRY_DSN=https://localhost/4
# add ?verify_ssl=0 when working with self-signed certificates

# optional settings - LDAP environment
#PDB_LDAP_ENABLE=1
#PDB_LDAP_SERVER_URL=ldap://127.0.0.1:389/
#PDB_LDAP_BIND_AS_AUTHENTICATING_USER=1
#PDB_LDAP_USER_SEARCH=ou=users,dc=example,dc=com
# recommended LDAP settings (TLS)
#PDB_LDAP_ENABLE_TLS=1
# set the option if you want to use self-signed certificates
#PDB_LDAP_ALLOW_SELF_SIGNED_CERT=1
#
# limit the search to a specific group
# leave empty to disable
#PDB_LDAP_GROUP_SEARCH=cn=groups,dc=example,dc=com
#
# if a specific LDAP group should be allowed to access the instance
# leave empty to disable
#PDB_LDAP_REQUIRE_GROUP=cn=group,dc=example,dc=com
