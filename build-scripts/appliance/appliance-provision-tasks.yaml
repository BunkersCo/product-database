---
######################################################################################################
# Tasks that can be included in an Ansible playbook for appliance provisioning
######################################################################################################
  - name: register initial_provisioning object
    stat: path={{ site_directory }}/{{ site_name }}/initial_provisioned
    register: initial_provisioning

  - include: ansible-tasks/10-install-packages-tasks.yaml
  - include: ansible-tasks/20-initial-stage-site-tasks.yaml
  - include: ansible-tasks/30-clone-source-tasks.yaml

  - name: update site settings (development)
    shell: python3 configure_site_settings.py {{ site_name }} {{ site_user }} {{ dbname }} {{ ignore_allowedhosts }}
    args:
      chdir: "{{ site_directory }}/{{ site_name }}/source/build-scripts/appliance/script/"
    when: deployment_type != "production"

  - name: update site settings (production)
    shell: python3 configure_site_settings.py {{ site_name }} {{ site_user }} {{ dbname }} production {{ ignore_allowedhosts }}
    args:
      chdir: "{{ site_directory }}/{{ site_name }}/source/build-scripts/appliance/script/"
    when: deployment_type == "production"

  # depends on sourcecode, configuration occurs after clone of the source directory
  - include: ansible-tasks/services/10-configure-nginx-tasks.yaml
  - include: ansible-tasks/services/20-configure-postgres-tasks.yaml
  - include: ansible-tasks/services/30-configure-gunicorn-tasks.yaml
  - include: ansible-tasks/services/40-configure-celery-tasks.yaml

  - include: ansible-tasks/40-update-site-tasks.yaml
  - include: ansible-tasks/restart-service-tasks.yaml

  - name: create initial provisioning flag
    file: path={{ site_directory }}/{{ site_name }}/initial_provisioned state=touch owner={{ site_user }} group={{ site_group }} mode=0644
    sudo: true
    when: initial_provisioning.stat.exists == False